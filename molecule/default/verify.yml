---
- name: Verify
  hosts: all
  become: true

  vars:
    drupal_vm_hostname: drupalvm.test

  tasks:
    - name: Validate web services are up and running.
      uri:
        url: localhost{{ item.port | default(omit) }}
        headers:
          Host: "{{ item.host_prefix }}{{ drupal_vm_hostname }}"
        return_content: true
      register: response
      failed_when: item.expected_content not in response.content
      with_items:
        - name: Drupal
          host_prefix: ""
          expected_content: "<title>Welcome to Drupal"
        - name: Dashboard
          host_prefix: "dashboard."
          expected_content: "Vagrant + Ansible"
        - name: Adminer
          host_prefix: "adminer."
          expected_content: "<title>Login - Adminer"
        - name: Pimp My Log
          host_prefix: "pimpmylog."
          expected_content: "<title>Pimp my Log"
        - name: MailHog
          host_prefix: ""
          port: "8025"
          expected_content: "<title>MailHog"

# TODO: Varnish
# if [ $TEST_INSTALLED_EXTRAS = true ]; then
#   docker exec $CONTAINER_ID curl -sSI --header Host:$HOSTNAME localhost:81 \
#     | tee /tmp/dvm-test \
#     | grep -q 'Via: .* varnish' \
#     && (echo 'Varnish install pass' && exit 0) \
#     || (echo 'Varnish install fail' && cat /tmp/dvm-test && exit 1)
# fi

# TODO: Drush
# docker exec $CONTAINER_ID bash -c "cd $DRUPALVM_DIR/drupal && $DRUSH_BIN status" \
#   | tee /tmp/dvm-test \
#   | grep -q 'Drush' \
#   && (echo 'Drush install pass' && exit 0) \
#   || (echo 'Drush install fail' && cat /tmp/dvm-test && exit 1)
